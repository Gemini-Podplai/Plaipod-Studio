
import React, { useState, useRef, useEffect } from "react";
import Sidebar from "@/components/Sidebar";
import ChatArea from "@/components/ChatArea";
import SettingsPanel from "@/components/SettingsPanel";
import { Message } from "@/types/chat";

const Index = () => {
  const [messages, setMessages] = useState<Message[]>([
    {
      role: "system",
      content: "Get started with AI Studio",
      subContent: "Ask a question or upload images, files, or audio to interact with multiple AI models."
    },
    {
      role: "user",
      content: "Explain quantum computing in simple terms."
    },
    {
      role: "assistant",
      content: "Certainly! Quantum computing is a new type of computing that relies on the principles of quantum physics. Traditional computers, like the one you might be using right now, use bits to store and process information. These bits can represent either a 0 or a 1. In contrast, quantum computers use quantum bits, or qubits. Unlike bits, qubits can represent not only a 0 or a 1 but also a superposition of both states simultaneously. This means that a qubit can be in multiple states at once, which allows quantum computers to perform certain calculations much faster and more efficiently."
    },
    {
      role: "user",
      content: "What are three great applications of quantum computing?"
    },
    {
      role: "assistant",
      content: "..."
    }
  ]);
  
  const [inputValue, setInputValue] = useState("");
  const [activeSection, setActiveSection] = useState("Chat");
  const [currentModel, setCurrentModel] = useState("Cosmos Pro 1.5");
  const [temperature, setTemperature] = useState(1);
  
  const messagesEndRef = useRef<HTMLDivElement>(null);
  
  const handleSendMessage = (e: React.FormEvent) => {
    e.preventDefault();
    if (!inputValue.trim()) return;
    
    // Add user message with proper typing
    const newMessages: Message[] = [
      ...messages,
      { role: "user" as const, content: inputValue }
    ];
    setMessages(newMessages);
    
    // Clear input
    setInputValue("");
    
    // Simulate AI response with proper typing
    setTimeout(() => {
      setMessages([
        ...newMessages,
        { 
          role: "assistant" as const, 
          content: "I'm a simulated AI response to your message: \"" + inputValue + "\". In a real application, this would be generated by an actual AI model." 
        }
      ]);
    }, 1000);
  };
  
  // Auto scroll to bottom when new messages arrive
  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  }, [messages]);
  
  return (
    <div className="flex h-screen bg-black text-white overflow-hidden">
      {/* Sidebar */}
      <Sidebar 
        activeSection={activeSection} 
        setActiveSection={setActiveSection} 
      />
      
      {/* Main content area */}
      <div className="flex-1 flex flex-col overflow-hidden border-l border-r border-gray-800">
        {/* Header */}
        <div className="flex justify-between items-center p-4 border-b border-gray-800">
          <h1 className="text-xl font-semibold">dPlay Studio</h1>
          <div className="flex items-center space-x-2">
            <button className="bg-blue-600 text-white px-3 py-1.5 rounded-md text-sm hover:bg-blue-700 transition-colors flex items-center">
              <span className="mr-1">+</span> New Chat
            </button>
            <button className="p-1.5 rounded-md hover:bg-gray-800 transition-colors">
              ⚙️
            </button>
          </div>
        </div>
        
        {/* Chat content area */}
        <ChatArea
          messages={messages}
          inputValue={inputValue}
          setInputValue={setInputValue}
          handleSendMessage={handleSendMessage}
          messagesEndRef={messagesEndRef}
        />
      </div>
      
      {/* Settings panel */}
      <SettingsPanel 
        currentModel={currentModel}
        setCurrentModel={setCurrentModel}
        temperature={temperature}
        setTemperature={setTemperature}
      />
    </div>
  );
};

export default Index;
